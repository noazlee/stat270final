---
title: "Workingdoccasetsuyd2"
format: html
editor: visual
---

```{r setup}
#| include: false
# Load necessary packages
library(tidyverse)
library(tidymodels)
library(dplyr)
library(ggformula)
library(ggplot2) 
library(GGally)
##install.packages("vip")
library(mosaic)
library(ranger)
library(vip)
library(caret)
tidymodels_prefer(quiet = TRUE) 
```

```{r}
df <- read.csv('conversion_predictors_of_clinically_isolated_syndrome_to_multiple_sclerosis.csv')
```

```{r}
df
```

EDA:
```{r}
str(df) # All quantitative variables - misleading
# everything except for age and schooling should be qualitative.
```
```{r}
df$Gender <- as.factor(df$Gender)
df$Breastfeeding <- as.factor(df$Breastfeeding)
df$Varicella <- as.factor(df$Varicella)
df$Initial_Symptom <- as.factor(df$Initial_Symptom)
df$Mono_or_Polysymptomatic <- as.factor(df$Mono_or_Polysymptomatic)
df$Oligoclonal_Bands <- as.factor(df$Oligoclonal_Bands)
df$LLSSEP <- as.factor(df$LLSSEP)
df$ULSSEP <- as.factor(df$ULSSEP)
df$VEP <- as.factor(df$VEP)
df$BAEP <- as.factor(df$BAEP)
df$Periventricular_MRI <- as.factor(df$Periventricular_MRI)
df$Cortical_MRI <- as.factor(df$Cortical_MRI)
df$Infratentorial_MRI <- as.factor(df$Infratentorial_MRI)
df$Spinal_Cord_MRI <- as.factor(df$Spinal_Cord_MRI)
df$Initial_EDSS <- as.factor(df$Initial_EDSS)
df$Final_EDSS <- as.factor(df$Final_EDSS)
df$group <- as.factor(df$group)
```

```{r}
str(df)
```

```{r}
missing_counts <- colSums(is.na(df))
missing_counts
```
Many missing values for EDSS (148 of 273 observations - over 54%) - however, there are likely more missing values with val = 3.

MISSING VALUES THAT ARE NOT NA (VALUE=UNKNOWN)
```{r}
mosaic::count(df$Breastfeeding==3)
```
85 records missing

```{r}
mosaic::count(df$Varicella==3)
```

```{r}
mosaic::count(df$Mono_or_Polysymptomatic==3)
```

```{r}
mosaic::count(df$Oligoclonal_Bands==2)
```

```{r}
df$X <- NULL
```


```{r}
df <- df |> filter(!if_any(Schooling, is.na))
df <- df |> filter(!if_any(Initial_Symptom, is.na))
```

```{r}
# Dropped missing schooling and initial_symptom records
missing_counts <- colSums(is.na(df))
missing_counts
```

```{r}
ggplot(df, aes(x = group)) +
  geom_bar() +
  labs(x = "Group", y = "Frequency", title = "Frequency of Each Group") +
  theme_minimal()
```
Roughly equal distribution of target variable.

```{r}
freq_table <- df|>
  group_by(group, Gender)|>
  summarise(Frequency = n(), .groups = "drop")
freq_table

ggplot(df, aes(x = Gender, fill = group)) +
  geom_bar(position = "dodge") +
  labs(x = "Gender", y = "Frequency", title = "Frequency of Each Group by Gender") +
  theme_minimal()
```
GROUP: 1 = CDMS (125), 2 = non-CDMS (146)
GENDER: 1 = Male (105), 2 = Female(166)
Observation: More female participants tested negative for CDMS despite prior studies indicating that CDMS occurs twice as often in women than in men.

```{r}
freq_table <- df|>
  group_by(group, Varicella)|>
  summarise(Frequency = n(), .groups = "drop")
freq_table

ggplot(df, aes(x = Varicella, fill = group)) +
  geom_bar(position = "dodge") +
  labs(x = "Varicella", y = "Frequency", title = "Frequency of Each Group by Varicella") +
  theme_minimal()
```
Those who tested negative with Varicella were observed to have CDMS at a higher frequeny

```{r}
freq_table2 <- df |>
  group_by(Schooling, group) |>
  summarise(Frequency = n(), .groups = "drop")

freq_table2

# Line graph with x = Schooling (years) and y = Frequency of CDMS
ggplot(freq_table2, aes(x = Schooling, y = Frequency, color = group, group = group)) +
  geom_line() +
  geom_point() +
  labs(x = "Years of Schooling", y = "Frequency", title = "Frequency of CDMS by Years of Schooling") +
  theme_minimal()
```

```{r}
df_binned <- df |>
  mutate(Schooling_Range = cut(Schooling,
                               breaks = c(0, 5, 10, 15, 20, Inf),
                               labels = c("0-5", "5-10", "10-15", "15-20", "20+"),
                               right = FALSE))

# Summarize frequency of CDMS by Schooling Range
freq_table <- df_binned |>
  group_by(Schooling_Range, group) |>
  summarise(Frequency = n(), .groups = "drop")

print(freq_table)

# Bar graph with Schooling ranges and frequency
ggplot(freq_table, aes(x = Schooling_Range, y = Frequency, fill = group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(x = "Schooling Range (Years)", y = "Frequency", title = "Frequency of CDMS by Schooling Range") +
  theme_minimal()
```
15-20+ years of schooling seemed to indicate higher risk of CDMS - maybe due to their age?

```{r}
df_binned <- df |>
  mutate(Age_Range = cut(Age, breaks = c(15, 20, 25, 30, 35, 40, 45, 50, 55, 60, Inf),
                                   labels = c("15-20", "20-25", "25-30", "30-35", 
                                              "35-40", "40-45", "45-50", "50-55", "60-65", "65+"),
                               right = FALSE))

# Summarize frequency of CDMS by Schooling Range
freq_table <- df_binned |>
  group_by(Age_Range, group) |>
  summarise(Frequency = n(), .groups = "drop")

print(freq_table)

# Bar graph with Schooling ranges and frequency
ggplot(freq_table, aes(x = Age_Range, y = Frequency, fill = group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(x = "Schooling Range (Years)", y = "Frequency", title = "Frequency of CDMS by Schooling Range") +
  theme_minimal()
```
Ages 20-35 seemed to have the highest frequency of CDMS.

UNSUPERVISED LEARNING:

PCA but we make dummy variables for analysis:
Stuff to consider: What do we do with unknowns? (val = 3) - is it okay to just impute median?

```{r}
df_new <- read.csv('conversion_predictors_of_clinically_isolated_syndrome_to_multiple_sclerosis.csv')

replace_with_mode <- function(x) {
  mode_value <- names(sort(table(x), decreasing = TRUE))[1] # Calculate mode
  x <- ifelse(x == 3, as.numeric(mode_value), x)
  return(x)
}

df_new$Initial_EDSS <- NULL
df_new$Final_EDSS <- NULL

df_new <- df_new |>
  mutate(
    Breastfeeding = replace_with_mode(Breastfeeding),
    Varicella = replace_with_mode(Varicella),
    Mono_or_Polysymptomatic = replace_with_mode(Mono_or_Polysymptomatic),
    Oligoclonal_Bands = replace_with_mode(Oligoclonal_Bands)
  )|>
  na.omit()
```

```{r}
group <- df_new$group

df_new <- df_new |>
  mutate(
    Breastfeeding = replace_with_mode(Breastfeeding),
    Varicella = replace_with_mode(Varicella),
    Mono_or_Polysymptomatic = replace_with_mode(Mono_or_Polysymptomatic),
    Oligoclonal_Bands = replace_with_mode(Oligoclonal_Bands)
  )

df_new <- df_new |>
  mutate(group = group) |>  
  na.omit()

numeric_cols <- df_new |>
  select(where(is.numeric))  
non_numeric_cols <- df_new |>
  select(-where(is.numeric)) 

scaled_numeric_cols <- as.data.frame(scale(numeric_cols))

df_new <- cbind(scaled_numeric_cols, non_numeric_cols)
df_new$group <- group

str(df_new)
```

```{r}
pc <- df_new |>
  select(-group) |>  
  prcomp()
```

```{r}
summary(pc)
```

```{r}
library(ggfortify)
autoplot(pc, data=df_new, colour='group')
```
```{r}
library(ggplot2)
library(tidyr)
library(tibble)

factor_loadings <- pc$rotation

factor_loadings_df <- as.data.frame(factor_loadings) |>
  rownames_to_column(var = "Feature") |>
  pivot_longer(
    cols = starts_with("PC"), 
    names_to = "PC", 
    values_to = "Loading"
  )

factor_loadings_df <- factor_loadings_df |>
  filter(PC %in% c("PC1", "PC2"))

ggplot(factor_loadings_df, aes(x = Loading, y = Feature, fill = Feature)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  facet_wrap(~PC, scales = "free") +
  theme_minimal() +
  labs(
    title = "Factor Loadings for PC1 to PC2",
    x = "Loading Value",
    y = "Feature"
  )

```
Higher PC1 and PC2 indicates higher probability of positive CDMS.

Latent Class Analysis: Statistical method for finding groups of related cases from multivariate categorical data. Concerned with the structure of classes. Research question: how many latent variables underlie a set of categorical observed variables?

```{r}
replace_with_mode <- function(x) {
  mode_value <- names(sort(table(x), decreasing = TRUE))[1] # Calculate mode
  x <- ifelse(x == 3, as.numeric(mode_value), x)
  return(x)
}

df$Initial_EDSS <- NULL
df$Final_EDSS <- NULL

df2 <- df |>
  mutate(
    Breastfeeding = replace_with_mode(Breastfeeding),
    Varicella = replace_with_mode(Varicella),
    Mono_or_Polysymptomatic = replace_with_mode(Mono_or_Polysymptomatic),
    Oligoclonal_Bands = replace_with_mode(Oligoclonal_Bands)
  ) |>
  na.omit()
str(df2)
```


```{r}
library(poLCA)
f <- cbind(Gender, Breastfeeding, Varicella, Mono_or_Polysymptomatic, Oligoclonal_Bands, LLSSEP, ULSSEP, VEP, BAEP, Periventricular_MRI, Cortical_MRI, Infratentorial_MRI, Spinal_Cord_MRI)~1
m1 <- poLCA(f, data=df2, nclass=2, graphs=TRUE, na.rm=TRUE)
```

```{r}
df2$latent_class_m1 <- m1$predclass
truth_table <- table(Predicted = df2$latent_class_m1, Actual = df2$group)
truth_table
```
63% accurate.


```{r}
m2 <- poLCA(f, data=df2, nclass=3, graphs=TRUE, na.rm=TRUE) # removing initial_symptoms improved it alot
```
```{r}
df2$latent_class_m2 <- m2$predclass
truth_table <- table(Predicted = df2$latent_class_m2, Actual = df2$group)
truth_table
```
Look at diagram for 'class 3' - more likely to yield positive CDMS.

MODELLING:
Naive Bayes / LDA / QDA?

LDA:
```{r}
set.seed(8080)
df_split <- df |> initial_split(prop = 0.7, strata = group)
df_train <- training(df_split)
df_testing <- testing(df_split)
df_testing_split <- df_testing |> initial_split(prop = 0.5, strata = group)
df_test <- testing(df_testing_split)
df_validation <- training(df_testing_split)
```

```{r}
head(df_train)
```


```{r}
library(GGally)

df_train |> 
  ggpairs(aes(colour = group, alpha=0.4), 
          columns = 1:5,
          lower = list(continuous = wrap("points")), 
          upper = list(continuous = wrap("points"))) +
  ggthemes::scale_fill_colorblind() +
  ggthemes::scale_color_colorblind() +
  theme_bw()
```

```{r}
library(discrim)
lda_model <- discrim_linear() |> 
  set_engine("MASS") |>
  set_mode("classification")

lda_rec <- recipe(group ~ ., data = df) |>
  step_mutate(
    Breastfeeding = ifelse(Breastfeeding == 3, names(sort(table(Breastfeeding), decreasing = TRUE))[1], Breastfeeding),
    Varicella = ifelse(Varicella == 3, names(sort(table(Varicella), decreasing = TRUE))[1], Varicella),
    Mono_or_Polysymptomatic = ifelse(Mono_or_Polysymptomatic == 3, names(sort(table(Mono_or_Polysymptomatic), decreasing = TRUE))[1], Mono_or_Polysymptomatic),
    Oligoclonal_Bands = ifelse(Oligoclonal_Bands == 3, names(sort(table(Oligoclonal_Bands), decreasing = TRUE))[1], Oligoclonal_Bands)
  ) |>
  step_impute_median(all_numeric_predictors()) |>
  step_naomit()

lda_wf <- workflow() |>
  add_model(lda_model) |>
  add_recipe(lda_rec)

lda_fit <- lda_wf |> fit(data = df_train)
```

```{r}
lda_pred <- lda_fit |> augment(new_data = df_validation)
conf_mat(lda_pred, truth = group, estimate = .pred_class)
```
```{r}
accuracy(lda_pred, truth = group, estimate = .pred_class)
yardstick::specificity(lda_pred, truth = group, estimate = .pred_class) # good specificity
yardstick::sensitivity(lda_pred, truth = group, estimate = .pred_class) # worse sensitivity
```


QDA:
```{r}
qda_model <- discrim_quad() |> 
  set_engine("MASS") |>
  set_mode("classification")

qda_wf <- workflow() |>
  add_model(qda_model) |>
  add_recipe(lda_rec)

qda_fit <- qda_wf |> fit(data = df_train) # did not work - cov matrix for at least one group is singular or non-invertible - so does not have full rank?
```


Naive Bayes:
```{r}
library(klaR)
nb_model <- naive_Bayes() |> 
  set_engine("klaR") |>
  set_mode("classification")

nb_wf <- workflow() |>
  add_model(nb_model) |>
  add_recipe(lda_rec)

nb_fit <- nb_wf |> fit(data = df_train)
```

```{r}
nb_pred <- nb_fit |> augment(new_data = df_validation)
conf_mat(lda_pred, truth = group, estimate = .pred_class)
```
```{r}
accuracy(nb_pred, truth = group, estimate = .pred_class)
yardstick::specificity(nb_pred, truth = group, estimate = .pred_class) # good specificity
yardstick::sensitivity(nb_pred, truth = group, estimate = .pred_class) # worse sensitivity
```
Better accuracy and sensitivity than lda, about the same specificity.

